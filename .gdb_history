print *scheduler->ready_processes->head
print *scheduler->blocked_processes 
print *scheduler->blocked_processes->head
print *(struct proc *)0x602250
exit
b shell_main
c
c
print *scheduler
print *scheduler->blocked_processes->head 
print *(struct proc *)0x602250
b exit
exit
b ps_main
c
b show_processes_cmd
c
n
n
print process_table 
print process_table[4]
print *(struct proc*)0x6067f8
print *scheduler
print *scheduler->ready_processes 
print *scheduler->ready_processes->head
print *scheduler->ready_processes->head->next
print *scheduler->ready_processes->head->next->next
n
print process_table 
b ps_main
c
print *scheduler->read
print *scheduler->ready_processes 
print *scheduler->ready_processes->head
print *scheduler->ready_processes->head->next 
print *scheduler->ready_processes->head->next->next 
b schedule
c
n
print *scheduler->current_
print *scheduler->current_process 
n
n
print *scheduler->current_
print *scheduler->current_process 
c
print *scheduler->current_process 
n
print *scheduler->current_process 
c
print *scheduler->current_process 
c
print *scheduler->current_process 
print *process_table
print *process_table[0]
print *process_table[1]
print *process_table[2]
print *process_table[3]
exit
c
print *process_table 
print *process_table[0] 
print *process_table[01 
print *process_table[1]
exxit
y
exit
c
c
b rd_wr_test_main
c
print *scheduler
print *scheduler->blocked_processes 
print *scheduler->ready_processes 
print process_table 
print *scheduler->ready_processes->head
exit
c
print kbuff
print *kbuff
print *kbuff->buf
print /s *kbuff->buf
hdb
gdb
exit
c
print kbuff
print *kbuff
print *kbd_read_queue 
print process_table 
print *kbd_read_queue->head 
print *kbd_read_queue->head->value 
print *(read_request_t *) kbd_read_queue->head->value 
list 149
list keyboardDriver.c:149
list keyboardDriver.c:149,149
b keyboardDriver.c:149
c
print *scheduler->current_
print *scheduler->current_process 
print *scheduler->blocked_processes 
print *scheduler->ready_processes 
print *scheduler->ready_processes->head 
print *kbd_read_queue->head
print *(read_request_t *)kbd_read_queue->head->value
n
print next_line_length()
print *kbuff
exit
b read_line
c
print *scheduler->current_process 
n
print next_line_length()
n
print *request 
n
print *req
print *request 
n
print *(read_request_t)kbd_read_queue->head->value 
print *(read_request_t *)kbd_read_queue->head->value 
n
exit
b read_line
c
n
s
n
s
n
n
n
n
s
n
print *scheduler->ready_processes 
print *scheduler->ready_processes->head 
print *scheduler->blocked_processes->head 
print *kbd_read_queue->head
print *(read_request_t*)kbd_read_queue->head->value
b handle_key_press
c
print *scheduler->current_process 
print *scheduler->blocked_processes 
b read_line 
exit
b read_line
c
print *scheduler->current_process 
b proc_ready
c
exit
b read_line
c
b schedule
c
print *scheduler->current_process 
l
n
print *scheduler->ready_processes->head 
n
n
n
print !scheduler->current_
print !scheduler->current_process 
print scheduler->current_process 
print ready_queue->count
exit
b read_line 
c
b sched
b schedule
c
print scheduler->current_
print scheduler->current_process 
n
print !scheduler->current_process 
exit
b read_line
c
b handle_key_press
c
n
l
until 142
n
print /c 49
print /c scanCode
n
n
n
n
n
c
l
until 142
n
n
n
print *scheduler->current_process 
print *(read_request_t*)kbd_read_queue->head->value 
n
n
print req->user_buffer
print (char *)req->user_buffer
print (int *)req->user_buffer
n
print kbuff
print *kbuff
print *kbuff->head
print kbuff->head
exit
b shell_main
c
n
until 85
print input_buffer 
exit
b scheduler.c:153
l scheduler.c:153
c
print *scheduler->current_process 
n
asm-prof
si
src-prof
n
c
n
n
n
asm-prof
n
n
n
n
n
src-prof
n
src-prof
asm-prof
n
src-prof
n
c
n
asm-prof
si
print rsp
x/10gx $rsp
l 1010a2
l &1010a2
l *1010a2
l 0x1010a2
exit
