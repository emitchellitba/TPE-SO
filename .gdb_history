n
print proc->stack_start 
print *proc
n
exity
exit
c
b sys_spawn_process 
c
b proc_init 
c
n
n
s
n
print memory_manager->next_address 
print memory_manager->end_address 
print memory_manager->next_address + to_allocate 
exit
b _irq00Handler 
clear
b clear
help breakpoint
d
b shell_main
c
c
b _irq00Handler 
c
d
print *scheduler
print *scheduler->ready_processes 
print *scheduler->blocked_processes 
print *scheduler->ready_processes 
print *scheduler->ready_processes->value
print *scheduler->ready_processes->head
print *scheduler->blocked_processes 
print *scheduler->blocked_processes->head
print *(struct proc *)0x602250
exit
b shell_main
c
c
print *scheduler
print *scheduler->blocked_processes->head 
print *(struct proc *)0x602250
b exit
exit
b ps_main
c
b show_processes_cmd
c
n
n
print process_table 
print process_table[4]
print *(struct proc*)0x6067f8
print *scheduler
print *scheduler->ready_processes 
print *scheduler->ready_processes->head
print *scheduler->ready_processes->head->next
print *scheduler->ready_processes->head->next->next
n
print process_table 
b ps_main
c
print *scheduler->read
print *scheduler->ready_processes 
print *scheduler->ready_processes->head
print *scheduler->ready_processes->head->next 
print *scheduler->ready_processes->head->next->next 
b schedule
c
n
print *scheduler->current_
print *scheduler->current_process 
n
n
print *scheduler->current_
print *scheduler->current_process 
c
print *scheduler->current_process 
n
print *scheduler->current_process 
c
print *scheduler->current_process 
c
print *scheduler->current_process 
print *process_table
print *process_table[0]
print *process_table[1]
print *process_table[2]
print *process_table[3]
exit
c
print *process_table 
print *process_table[0] 
print *process_table[01 
print *process_table[1]
exxit
y
exit
pro-prof
b mainc
b main
c
n
s
n
s
n
s
n
si
s
n
n
exit
pro-prof
b main
c
n
s
n
s
exit
pro-prof
b main
c
n
sn
s
n
si
n
si
finish
si
c
exit
b main
c
n
s
print sem_blocked_proc
pro-prof
n
n
print p2
n
print p1
n
si
n
si
n
print scheduler->current_process 
n
so
si
print process_wrapper
exit
pro-prof
b main
c
n
s
n
si
n
si
n
si
x/10x $sp
si
n
si
n
print test_sem
exit
pro-prof
b process_wrapper
c
n
s
s
n
print semaphore[id]
print semaphore_table[id]
n
print test_sem
ns
s
n
si
n
s
n
s
n
n
s
n
gdb
exit
b process_wrapper
c
n
s
n
s
n
si
pro-prof
si
n
si
n
exit
pro-por
pro-prof
b process_wrapper
c
n
s
n
s
n
s
n
si
n
si
finish
si
n
n
exit
pro-prof
b process_wrapper
c
n
s
n
s
n
s
n
si
n
si
finish
si
si
n
exit
